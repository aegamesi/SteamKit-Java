package uk.co.thomasc.steamkit.base.generated;// Generated by the protocol buffer compiler.  DO NOT EDIT!

@SuppressWarnings("hiding")
public interface EncryptedAppTicketWrapper {

  public static final class EncryptedAppTicket extends
      com.google.protobuf.nano.ExtendableMessageNano<EncryptedAppTicket> {

    private static volatile EncryptedAppTicket[] _emptyArray;
    public static EncryptedAppTicket[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new EncryptedAppTicket[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional uint32 ticket_version_no = 1;
    public int ticketVersionNo;

    // optional uint32 crc_encryptedticket = 2;
    public int crcEncryptedticket;

    // optional uint32 cb_encrypteduserdata = 3;
    public int cbEncrypteduserdata;

    // optional uint32 cb_encrypted_appownershipticket = 4;
    public int cbEncryptedAppownershipticket;

    // optional bytes encrypted_ticket = 5;
    public byte[] encryptedTicket;

    public EncryptedAppTicket() {
      clear();
    }

    public EncryptedAppTicket clear() {
      ticketVersionNo = 0;
      crcEncryptedticket = 0;
      cbEncrypteduserdata = 0;
      cbEncryptedAppownershipticket = 0;
      encryptedTicket = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.ticketVersionNo != 0) {
        output.writeUInt32(1, this.ticketVersionNo);
      }
      if (this.crcEncryptedticket != 0) {
        output.writeUInt32(2, this.crcEncryptedticket);
      }
      if (this.cbEncrypteduserdata != 0) {
        output.writeUInt32(3, this.cbEncrypteduserdata);
      }
      if (this.cbEncryptedAppownershipticket != 0) {
        output.writeUInt32(4, this.cbEncryptedAppownershipticket);
      }
      if (!java.util.Arrays.equals(this.encryptedTicket, com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        output.writeBytes(5, this.encryptedTicket);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.ticketVersionNo != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(1, this.ticketVersionNo);
      }
      if (this.crcEncryptedticket != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(2, this.crcEncryptedticket);
      }
      if (this.cbEncrypteduserdata != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(3, this.cbEncrypteduserdata);
      }
      if (this.cbEncryptedAppownershipticket != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt32Size(4, this.cbEncryptedAppownershipticket);
      }
      if (!java.util.Arrays.equals(this.encryptedTicket, com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(5, this.encryptedTicket);
      }
      return size;
    }

    @Override
    public EncryptedAppTicket mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.ticketVersionNo = input.readUInt32();
            break;
          }
          case 16: {
            this.crcEncryptedticket = input.readUInt32();
            break;
          }
          case 24: {
            this.cbEncrypteduserdata = input.readUInt32();
            break;
          }
          case 32: {
            this.cbEncryptedAppownershipticket = input.readUInt32();
            break;
          }
          case 42: {
            this.encryptedTicket = input.readBytes();
            break;
          }
        }
      }
    }

    public static EncryptedAppTicket parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new EncryptedAppTicket(), data);
    }

    public static EncryptedAppTicket parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new EncryptedAppTicket().mergeFrom(input);
    }
  }
}
